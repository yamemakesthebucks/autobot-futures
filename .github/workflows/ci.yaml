name: CI

on:
  push:
    branches: [ main ]

env:
  # full image reference – used for build/push and for kind load
  IMAGE: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USERNAME }}/autobot-futures:latest

jobs:
  lint-and-test:
    name: 🐍 Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -q

  build-and-push:
    name: 🐋 Build & Push Docker Image
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build & push image (and load into local daemon)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true                # push to registry
          load: true                # also leave the image in local Docker
          tags: ${{ env.IMAGE }}

  deploy:
    name: 🚀 Deploy to Kind
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Install kind & kubectl
      - name: Install Kind & Kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -Lo kubectl https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          curl -Lo kind https://kind.sigs.k8s.io/dl/v0.21.0/kind-linux-amd64
          chmod +x kind && sudo mv kind /usr/local/bin/

      - name: Create Kind cluster
        run: kind create cluster --name ci

      - name: Load image into Kind
        run: kind load docker-image ${{ env.IMAGE }} --name ci

      - name: Deploy manifests
        run: |
          kubectl apply -f infra/k8s/deployment.yaml
          kubectl apply -f infra/k8s/service.yaml

      - name: Show cluster resources
        run: kubectl get all --namespace default

      - name: Delete Kind cluster
        if: always()
        run: kind delete cluster --name ci
